{
  "name": "Diamondphp",
  "tagline": "Diamond PHP is a fully featured framework built for PHP 7 and offers extreme performance, a modular architecture, elegant syntax and an easy to use philosophy.",
  "body": "DIAMONDPHP\r\n=============\r\nDiamond PHP is a fully featured web development framework built for PHP 7 and offers extreme performance, a modular architecture, elegant syntax and an easy to use philosophy.\r\n\r\n### PROJECT STATUS\r\nDiamond PHP is currently in **ALPHA** stages of development. As such, it is not recommended to use the framework in a production environment yet.\r\nA beta version is scheduled for on December 1, 2016, and a production-ready version 1.0.0 is scheduled for public release on January 15, 2017.\r\n\r\n### PHILOSOPHY & GOALS\r\nLike all frameworks, Diamond PHP strives to simplify and speed up the web development process. Where Diamond PHP deviates from most frameworks\r\nis in its emphasis on the *developer*, by creating an extraordinarily easy to learn and easy to use environment -- without sacrificing performance,\r\nfeatures or extensibility. A framework should help a developer by completing common tasks for the developer and providing options for other tasks,\r\nbut still being perfectly capable of \"getting out of the way\" when needed. A framework cannot be all things to all people, so it is important to be\r\nable to *safely* work outside the box with minimal fuss when needed.\r\nWe think that you'll find the blazing fast performance, the ultra-light footprint, the comprehensive feature set and the emphasis on ease of use \r\nto be an indispensable new tool in your web development repertoire.\r\n\r\n### FEATURES\r\n* PHP 7.0 compliant\r\n* MVC architecture\r\n* Pimple Dependency Injection\r\n* Composer package management\r\n* Symfony observer/event dispatching\r\n* Smarty 3 template engine\r\n* Large collection of custom developer tools (Geolocation, cronjob management, IP white & black listing, text/date/time formatting, and much more)\r\n* Basic administration panel to build upon and customize\r\n* Built-in login system & session management\r\n* Profile create/edit\r\n* View other member profiles\r\n* Built-in messaging system\r\n* Built-in friend management system\r\n* Responsive theme included with framework\r\n\r\n### Documentation\r\nFull and comprehensive documentation is currently in development, and will be available at https://diamondphp.com/documentation\r\n\r\n### Installation\r\n1. Create an empty database. Using a tool of your choice (phpMyAdmin, SSH, etc), import the diamondphp.sql file located in the **/var/install** folder.\r\n\r\n2. Open the configuration file: /app/code/core/config/Config.php\r\n3. Enter your database connection settings on lines 15-18\r\n4. Enter your site or business name on line 26     `( $this->setting['site_name'] = '' )`\r\n5.  Enter your site admin / customer care email address on line 32 `( $this->setting['site_email'] = ''  )`\r\n\r\nThat's it! If you are installing the framework into a subdirectory, you'll have one more step to complete:\r\n\r\n##### IF YOU ARE INSTALLING IN A SUBDIRECTORY\r\nFind the following line in Config.php, on or near line 185:\r\n\r\n    $this->setting['site_url'] = $protocol . $_SERVER[\"SERVER_NAME\"] . '/' . $uri[0][0];\r\n\r\nChange the `$uri[0][0]` array to `$uri[0][1]` and then append a forward slash. Example:\r\n\r\n    $this->setting['site_url'] = $protocol . $_SERVER[\"SERVER_NAME\"] . '/' . $uri[0][1] . '/';\r\n\r\nTo complete installation in subdirectory, you will need to also update the RewriteBase rule in the provided .htaccess file in the root directory.  Change `RewriteBase /` to `RewriteBase /name-of-your-subdirectory/`\r\n\r\n\r\nThe remaining settings are optional to complete, but is highly recommended to go through them and add/edit as necessary.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}